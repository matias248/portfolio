---
interface Props {
  title: string;
  description: string;
  technologiesFrontEnd?: string;
  technologiesBackEnd?: string;
  technologiesOthers?: string;
  linkDeploy?: string;
  linkGithubProject?: string;
  imagesGallery?: string[];
}

const {
  title,
  description,
  linkDeploy,
  linkGithubProject,
  technologiesFrontEnd,
  technologiesBackEnd,
  technologiesOthers,
  imagesGallery,
} = Astro.props;
---

<div
  class="absolute w-3 h-3 rounded-full mt-1.5 -start-1.5 border border-gray-900 bg-gray-700"
>
</div>
<h3 class="text-lg font-semibold text-yellow-800 dark:text-yellow-200 mt-2">
  {title}
</h3>
<p class="mb-2 text-base font-normal dark:text-gray-200 text-pretty">
  {description}
</p>
{
  technologiesFrontEnd && (
    <p class="mb-2 text-base font-normal dark:text-gray-200 text-pretty">
      <span class="font-bold text-sky-800 dark:text-sky-200">Front End:</span>{" "}
      {technologiesFrontEnd}
    </p>
  )
}
{
  technologiesBackEnd && (
    <p class="mb-2 text-base font-normal dark:text-gray-200 text-pretty">
      <span class="font-bold text-sky-800 dark:text-sky-200">Back End:</span>{" "}
      {technologiesBackEnd} 
    </p>
  )
}
{
  technologiesOthers && (
    <p class="mb-2 text-base font-normal dark:text-gray-200 text-pretty">
      <span class="font-bold text-sky-800 dark:text-sky-200">Others:</span>{" "}
      {technologiesOthers}
    </p>
  )
}
{
  linkDeploy && (
  <p class="mb-2 text-base font-normal dark:text-gray-200 text-pretty overflow-auto ">
      <span class="font-bold text-sky-800 dark:text-sky-200">
        Front End deployment:
      </span>{" "}
      <a
        class="hover:bg-white rounded-full px-3 transition underline"
        href={linkDeploy}
      >
        {linkDeploy}
      </a>
    </p>
  )
}
{
  linkGithubProject && (
    <p class="mb-2 text-base font-normal dark:text-gray-200 text-pretty overflow-auto ">
      <span class="font-bold text-sky-800 dark:text-sky-200">
        Project link:
      </span>{" "}
      <a
        class="hover:bg-white rounded-full px-3 transition underline"
        href={linkGithubProject}
      >
        {linkGithubProject}
      </a>
    </p>
  )
}
{
  imagesGallery && (
    <div class=" lg-rounded flex  max-w-[1200px] w-[90%] flex-nowrap overflow-auto gap-x-4">
      {imagesGallery.map((element) => {
        return (
          <img class="" src={element} alt="project photo" />
        );
      })}
    </div>
  )
}
